产品需求文档 (PRD): 与高我对话 (Dialogue with Higher Self)
版本: 1.1
日期: 2025年8月17日
1. 项目概述
1.1. 项目愿景
“与高我对话”是一个创新的Web应用，旨在为用户提供一个与高度智能、反应迅速的AI（扮演用户的“高我”）进行深度对话的私密空间。通过个性化的引导和颠覆性的视角，帮助用户打破思维定式、发现认知盲点，从而实现个人成长和心智提升。
1.2. 核心目标
深度个性化: 通过一个动态、可成长的“人生蓝图”系统，让AI能够深度理解用户背景，提供高度定制化的交流。
卓越用户体验: 提供一个沉浸式、流畅且极具启发性的对话体验，界面设计独特，操作流程简化。
可持续商业化: 基于大模型API的成本，建立一个清晰、公平的付费模式，实现项目盈利。
1.3. 目标用户
寻求自我探索、个人成长、希望获得全新视角来解决生活和工作挑战的年轻专业人士、创业者和学生。他们对新科技（如AI）有较高的接受度，并愿意为真正有价值的服务付费。
2. 功能需求 (Functional Requirements)
2.1. 用户账户系统 (基于 Supabase Auth)
用户注册:
流程: 注册流程追求极致简化以降低用户流失。用户仅需提供 邮箱地址 和 设置密码 即可完成注册。
账号规则: 邮箱地址将作为用户的唯一登录账号，注册后 不可修改。
验证: 无需 手机验证码或邮箱验证码。注册成功后，用户信息直接写入Supabase的 auth.users 表。
隐私: 明确告知用户，邮箱仅用作登录和密码找回，不会用于营销。
用户登录: 用户使用注册的邮箱和密码进行登录。系统需提供“记住我”功能。
密码管理:
用户可以在登录后，在个人设置中修改密码。
提供标准的“忘记密码”流程，通过向注册邮箱发送重置链接来让用户重设密码。
2.2. 核心功能: "我的人生蓝图" (动态个人档案系统)
这是产品的核心差异化功能，旨在取代传统的一次性引导问卷。
核心理念:
循序渐进: 用户无需在注册后立即填写，可以先体验对话。
完全自愿: 所有档案信息均为选填，通过“让AI越了解你，对话越惊喜”的文案激励用户填写。
动态可编辑: 用户可以随时进入此模块，补充、修改或删除自己的信息，它是一个与用户共同成长的“活档案”。
功能设计:
入口: 在用户登录后的主导航栏或仪表盘（Dashboard）中设置一个名为 “我的人生蓝图” 的常驻入口。
界面布局: 采用 标签页 (Tabs) 或 手风琴式 (Accordion) 布局，将庞大的信息量分解为逻辑清晰的模块，避免用户产生压迫感。
模块划分:
人生轨迹: 童年成长、求学之路、重大转折点。
职业与成就: 工作理念、高光时刻（最自豪的事）、至暗时刻（最挫败的事）、技能才华。
人际与情感: 家庭关系、亲密关系（恋爱婚姻）、社交圈、最丢人的事。
身心健康: 身体状况、精神状态、能量来源。
价值观与信念: 核心价值观、人生目标、自我觉察的思维定式。
数据交互: 所有输入框均为可拉伸的多行文本域，并支持 自动实时保存，无需用户手动点击按钮。
2.3. 核心对话界面
UI设计:
背景: 实现动态、流光溢彩的星空/宇宙渐变效果，营造沉浸、私密、深邃的对话氛围。
布局: 经典聊天界面，上方为对话历史，下方为输入框。
对话流:
首次对话: 用户完成极简注册（仅输入昵称）后，立即进入对话界面。AI发送欢迎语，并基于其“高我”角色设定开启对话。
适时引导: 在对话进行数轮后，AI可主动引导用户完善“人生蓝图”，以获得更深度的洞察。
AI记忆: AI的每一次回复，都应基于用户的“人生蓝图”数据和当前对话的上下文，形成连贯、有针对性的交流。
大模型集成:
需接入一个高性能的大语言模型API（如GPT-4, Claude 3, Gemini等）。
必须精确计算和记录每次对话消耗的Token数量，与用户账户关联。
2.4. 计费与支付系统 (基于 Zpay)
商业模式: “免费额度 + 按需付费”模式。
免费额度: 新注册用户自动获得一定数量的免费对话Token（例如：20,000 Tokens）。
Token监控与提醒:
实时跟踪用户Token消耗。
当额度低于10%时，在界面上给予友好提示。
额度用尽后，禁用对话输入框，并引导用户前往充值页面。
支付流程 (严格按照提供的Zpay文档实现):
定价页面 (/pricing): 提供多种充值选项，用户必须登录后才能访问。
一次性购买: 购买固定数量的Tokens。
订阅模式: 按月订阅，每月获得固定Token额度。
发起支付 (/api/checkout/providers/zpay/url): 前端请求此接口，后端根据用户ID和产品ID，查询价格并生成包含签名的Zpay支付URL，然后返回给前端进行跳转。
支付回调 (/api/checkout/providers/zpay/webhook):
此接口用于接收Zpay的异步支付结果通知。
安全第一: 必须严格执行 签名验证 和 订单金额校验，防止伪造通知。
幂等性处理: 检查数据库中订单号的状态，防止重复处理同一笔订单。
处理成功后，向Zpay服务器返回纯文本 "success"。
权益发放: Webhook验证成功后，立即为用户账户增加相应的Token数量或更新订阅有效期。订阅续订需从上一个订阅期结束后起算。
2.5. 用户中心 (Dashboard)
入口: 用户登录后，可通过点击头像或导航栏进入。
功能:
状态概览: 清晰显示当前剩余Token数量，或订阅模式的类型及到期日。
“人生蓝图”入口: 醒目的入口引导用户编辑个人档案。
购买历史: 列表展示所有历史订单记录，包括商品名、金额、日期和状态（待支付/已完成）。
3. 非功能性需求
性能: 页面加载迅速，AI响应时间控制在3秒以内。
安全:
用户在“人生蓝图”中填写的敏感信息必须加密存储。
严格使用Supabase的行级安全策略（RLS），确保用户只能访问自己的数据。
支付流程的所有环节必须符合安全规范。
响应式设计: 网站在桌面、平板和手机上均能提供优秀的使用体验。
4. 技术规格
前端: Next.js / React
UI与动效: Tailwind CSS, Framer Motion
后端: Next.js (API Routes)
数据库与认证: Supabase
支付网关: Zpay
数据库设计:
profiles 表: 关联 auth.users，增加一个 life_blueprint (JSONB) 字段用于存储“人生蓝图”的结构化数据，以及一个 token_balance (INT) 字段。
subscriptions 表: 存储用户的订阅状态，包括 user_id, status, current_period_end 等。
zpay_transactions 表: 使用提供的SQL文件创建，用于记录所有支付交易。
环境变量:
NEXT_PUBLIC_SUPABASE_URL, NEXT_PUBLIC_SUPABASE_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY (用于后端安全操作)
NEXT_PUBLIC_APP_URL (应用部署的URL)
ZPAY_PID, ZPAY_KEY
LLM_API_KEY (大模型API密钥)
5. 分阶段开发计划 (给Code Buddy的执行建议)
第一阶段：基础架构与核心体验
初始化Next.js项目，集成Supabase并配置好环境变量。
实现简化版用户认证系统（注册、登录、密码重置）。
构建**“人生蓝图”**的前后端，包括模块化界面和数据读写API。
搭建核心对话界面UI（含星空动效），并接入大模型API，实现能读取“人生蓝图”数据并进行对话的基础版本。
第二阶段：商业化闭环
严格按照文档，开发Zpay的两个核心API：支付URL生成和Webhook回调处理。
创建前端的定价页面 (/pricing) 并与后端API对接。
实现支付成功后自动为用户增加Token或更新订阅状态的逻辑。
第三阶段：完善与优化
开发用户中心（Dashboard），展示账户状态和购买历史。
实现Token监控与额度用尽的提醒和限制逻辑。
进行全面的响应式设计适配和UI细节打磨。
第四阶段：测试与部署
进行端到端的完整功能测试，重点测试支付流程的各种边界情况（如重复回调、签名错误、网络中断等）。
将应用部署到Vercel等平台，并配置生产环境的域名和Supabase URL。